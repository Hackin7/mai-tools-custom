/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./scripts/recent-play-downloader.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/common/constants.ts":
/*!********************************!*\
  !*** ./js/common/constants.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DX_SPLASH_GAME_VERSION = exports.DX_PLUS_GAME_VERSION = exports.DX_GAME_VERSION = exports.SSSPLUS_MIN_ACHIEVEMENT = exports.DIFFICULTY_CLASSNAME_MAP = exports.DIFFICULTIES = void 0;\r\nexports.DIFFICULTIES = [\r\n    \"BASIC\", \"ADVANCED\", \"EXPERT\", \"MASTER\", \"Re:MASTER\"\r\n];\r\nexports.DIFFICULTY_CLASSNAME_MAP = new Map([\r\n    [\"Re:MASTER\", \"remaster\"],\r\n    [\"MASTER\", \"master\"],\r\n    [\"EXPERT\", \"expert\"],\r\n    [\"ADVANCED\", \"advanced\"],\r\n]);\r\nexports.SSSPLUS_MIN_ACHIEVEMENT = 100.5;\r\nexports.DX_GAME_VERSION = 13;\r\nexports.DX_PLUS_GAME_VERSION = 14;\r\nexports.DX_SPLASH_GAME_VERSION = 15;\r\n\n\n//# sourceURL=webpack:///./js/common/constants.ts?");

/***/ }),

/***/ "./js/common/lang.ts":
/*!***************************!*\
  !*** ./js/common/lang.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LANG = void 0;\r\nconst queryParams = new URLSearchParams(document.location.search);\r\nlet lang = \"en\";\r\nif (queryParams.get(\"hl\")) {\r\n    lang = queryParams.get(\"hl\").startsWith(\"zh\") ? \"zh\" : \"en\";\r\n}\r\nelse if (navigator.language.startsWith(\"zh\")) {\r\n    lang = \"zh\";\r\n}\r\nexports.LANG = lang;\r\n\n\n//# sourceURL=webpack:///./js/common/lang.ts?");

/***/ }),

/***/ "./scripts/recent-play-downloader.ts":
/*!*******************************************!*\
  !*** ./scripts/recent-play-downloader.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst constants_1 = __webpack_require__(/*! ../js/common/constants */ \"./js/common/constants.ts\");\r\nconst lang_1 = __webpack_require__(/*! ../js/common/lang */ \"./js/common/lang.ts\");\r\n(function () {\r\n    const UIString = {\r\n        zh: {\r\n            date: \"日期\",\r\n            songName: \"歌曲\",\r\n            difficulty: \"難度\",\r\n            achievement: \"達成率\",\r\n            stamps: \"成就\",\r\n            playDate: \"遊玩日期：\",\r\n            newRecordToggleHeading: \"顯示：\",\r\n            sortBy: \"排序方式：\",\r\n            newRecordsOnly: \"只顯示新高分紀錄\",\r\n            allRecords: \"全部\",\r\n            olderFirst: \"由舊到新\",\r\n            newerFirst: \"由新到舊\",\r\n            copy: \"複製\",\r\n            copied: \"已複製到剪貼簿\",\r\n            downloadAsImage: \"存成圖片\",\r\n        },\r\n        en: {\r\n            date: \"Date\",\r\n            songName: \"Song\",\r\n            difficulty: \"Difficulty\",\r\n            achievement: \"Achv\",\r\n            stamps: \"Grade\",\r\n            playDate: \"Play date:\",\r\n            newRecordToggleHeading: \"Display:\",\r\n            sortBy: \"Sort by:\",\r\n            newRecordsOnly: \"New records only\",\r\n            allRecords: \"All\",\r\n            olderFirst: \"Older first\",\r\n            newerFirst: \"Newer first\",\r\n            copy: \"Copy\",\r\n            copied: \"Copied to clipboard\",\r\n            downloadAsImage: \"Save as image\",\r\n        },\r\n    }[lang_1.LANG];\r\n    const AP_FC_IMG_NAME_TO_TEXT = new Map([\r\n        [\"fc\", \"FC\"],\r\n        [\"fcplus\", \"FC+\"],\r\n        [\"ap\", \"AP\"],\r\n        [\"applus\", \"AP+\"],\r\n    ]);\r\n    const FS_FDX_IMG_NAME_TO_TEXT = new Map([\r\n        [\"fs\", \"FULL SYNC\"],\r\n        [\"fsplus\", \"FULL SYNC+\"],\r\n        [\"fsd\", \"FULL SYNC DX\"],\r\n        [\"fsdplus\", \"FULL SYNC DX+\"],\r\n    ]);\r\n    const IMG_HW = 90; // height and width\r\n    const DATE_CHECKBOX_CLASSNAME = \"dateCheckbox\";\r\n    const NEW_RECORD_RADIO_NAME = \"newRecordRadio\";\r\n    const SORT_BY_RADIO_NAME = \"sortByRadio\";\r\n    const SCORE_RECORD_ROW_CLASSNAME = \"recordRow\";\r\n    const SCORE_RECORD_CELL_BASE_CLASSNAME = \"recordCell\";\r\n    const SCORE_RECORD_CELL_CLASSNAMES = [\r\n        \"dateCell\",\r\n        \"songTitleCell\",\r\n        \"difficultyCell\",\r\n        \"achievementCell\",\r\n        \"stampsCell\",\r\n    ];\r\n    const ce = document.createElement.bind(document);\r\n    // 540 = 9 * 60 minutes = UTC+9 (Japan Time), 1 minute = 60000 milliseconds\r\n    const timezoneOffset = (540 + new Date().getTimezoneOffset()) * 60000;\r\n    function padNumberWithZeros(n, len) {\r\n        len = len || 2;\r\n        return n.toString().padStart(len, \"0\");\r\n    }\r\n    function getPlayDate(row) {\r\n        const playDateText = row.querySelector(\".sub_title\").children[1].innerText;\r\n        const m = playDateText.match(/(\\d+)\\/(\\d+)\\/(\\d+) (\\d+):(\\d+)/);\r\n        const japanDt = new Date(parseInt(m[1]), parseInt(m[2]) - 1, parseInt(m[3]), parseInt(m[4]), parseInt(m[5]));\r\n        return new Date(japanDt.valueOf() - timezoneOffset);\r\n    }\r\n    function getSongName(row) {\r\n        return row.querySelector(\".m_5.p_5.f_13\").childNodes[1].wholeText;\r\n    }\r\n    function getSongImgSrc(row, canvas, context) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            context.drawImage(row.querySelector(\".music_img\"), 0, 0, canvas.width, canvas.height);\r\n            return new Promise((resolve) => {\r\n                resolve(canvas.toDataURL());\r\n                //canvas.toBlob((blob) => {\r\n                //  resolve(URL.createObjectURL(blob));\r\n                //}, 'image/jpeg', 1.0);\r\n            });\r\n        });\r\n    }\r\n    function getDifficulty(row) {\r\n        const recordBody = row.children[1];\r\n        const cn = recordBody.className;\r\n        let diff = cn.substring(cn.indexOf(\"_\") + 1, cn.lastIndexOf(\"_\"));\r\n        diff = diff === \"remaster\" ? \"Re:MASTER\" : diff.toUpperCase();\r\n        const isDxChart = row.querySelector(\".playlog_music_kind_icon\").src.endsWith(\"music_dx.png\");\r\n        return isDxChart ? \"DX \" + diff : diff;\r\n    }\r\n    function getAchievement(row) {\r\n        return parseFloat(row.querySelector(\".playlog_achievement_txt\").innerText);\r\n    }\r\n    function getStamps(row) {\r\n        const rankImgSrc = row.querySelector(\"img.playlog_scorerank\").src.replace(/\\?ver=.*$/, \"\");\r\n        const rank = rankImgSrc\r\n            .substring(rankImgSrc.lastIndexOf(\"/\") + 1, rankImgSrc.lastIndexOf(\".\"))\r\n            .replace(\"plus\", \"+\")\r\n            .toUpperCase();\r\n        const stampImgs = row.querySelectorAll(\".playlog_result_innerblock > img\");\r\n        const fcapSrc = stampImgs[0].src.replace(/\\?ver=.*$/, \"\");\r\n        const fcapImgName = fcapSrc.substring(fcapSrc.lastIndexOf(\"/\") + 1, fcapSrc.lastIndexOf(\".\"));\r\n        const fullSyncSrc = stampImgs[1].src.replace(/\\?ver=.*$/, \"\");\r\n        const fullSyncImgName = fullSyncSrc.substring(fullSyncSrc.lastIndexOf(\"/\") + 1, fullSyncSrc.lastIndexOf(\".\"));\r\n        let result = rank;\r\n        if (AP_FC_IMG_NAME_TO_TEXT.has(fcapImgName)) {\r\n            result += \" / \" + AP_FC_IMG_NAME_TO_TEXT.get(fcapImgName);\r\n        }\r\n        if (FS_FDX_IMG_NAME_TO_TEXT.has(fullSyncImgName)) {\r\n            result += \" / \" + FS_FDX_IMG_NAME_TO_TEXT.get(fullSyncImgName);\r\n        }\r\n        return result;\r\n    }\r\n    function getIsNewRecord(row) {\r\n        return !!row.querySelector(\".playlog_achievement_label_block + img.playlog_achievement_newrecord\");\r\n    }\r\n    function collectRecentPlays() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const scoreList = Array.from(document.querySelectorAll(\".main_wrapper .p_10.t_l.f_0.v_b\"));\r\n            const results = [];\r\n            const canvas = document.createElement(\"canvas\");\r\n            canvas.width = IMG_HW;\r\n            canvas.height = IMG_HW;\r\n            const context = canvas.getContext(\"2d\");\r\n            for (const row of scoreList) {\r\n                results.push({\r\n                    date: getPlayDate(row),\r\n                    songName: getSongName(row),\r\n                    songImgSrc: yield getSongImgSrc(row, canvas, context),\r\n                    difficulty: getDifficulty(row),\r\n                    achievement: getAchievement(row),\r\n                    stamps: getStamps(row),\r\n                    isNewRecord: getIsNewRecord(row),\r\n                });\r\n            }\r\n            results.reverse();\r\n            return results;\r\n        });\r\n    }\r\n    function formatDate(dt) {\r\n        return (dt.getFullYear() +\r\n            \"-\" +\r\n            padNumberWithZeros(dt.getMonth() + 1) +\r\n            \"-\" +\r\n            padNumberWithZeros(dt.getDate()) +\r\n            \" \" +\r\n            padNumberWithZeros(dt.getHours()) +\r\n            \":\" +\r\n            padNumberWithZeros(dt.getMinutes()));\r\n    }\r\n    function _renderScoreRowHelper(columnValues, rowClassnames, isHeading) {\r\n        const tr = ce(\"tr\");\r\n        for (const cn of rowClassnames) {\r\n            tr.classList.add(cn);\r\n        }\r\n        columnValues.forEach((v, index) => {\r\n            const cell = ce(isHeading ? \"th\" : \"td\");\r\n            if (typeof v === \"string\") {\r\n                cell.append(v);\r\n            }\r\n            else {\r\n                cell.classList.add(\"songImg\");\r\n                cell.style.backgroundImage = 'url(\"' + v[1] + '\")';\r\n                cell.append(v[0]);\r\n            }\r\n            cell.classList.add(SCORE_RECORD_CELL_BASE_CLASSNAME);\r\n            cell.classList.add(SCORE_RECORD_CELL_CLASSNAMES[index]);\r\n            tr.append(cell);\r\n        });\r\n        return tr;\r\n    }\r\n    function renderScoreHeadRow() {\r\n        return _renderScoreRowHelper([\r\n            UIString.date,\r\n            UIString.songName,\r\n            UIString.difficulty,\r\n            UIString.achievement,\r\n            UIString.stamps,\r\n        ], [SCORE_RECORD_ROW_CLASSNAME], true);\r\n    }\r\n    function renderScoreRow(record) {\r\n        const difficultyWithoutDxPrefix = record.difficulty.split(\" \").pop();\r\n        return _renderScoreRowHelper([\r\n            formatDate(record.date),\r\n            [record.songName, record.songImgSrc],\r\n            record.difficulty,\r\n            record.achievement.toFixed(4) + \"%\",\r\n            record.stamps,\r\n        ], [SCORE_RECORD_ROW_CLASSNAME, constants_1.DIFFICULTY_CLASSNAME_MAP.get(difficultyWithoutDxPrefix)], false);\r\n    }\r\n    function renderTopScores(records, container, thead, tbody) {\r\n        thead.innerHTML = \"\";\r\n        tbody.innerHTML = \"\";\r\n        thead.append(renderScoreHeadRow());\r\n        records.forEach((r) => {\r\n            tbody.append(renderScoreRow(r));\r\n        });\r\n        container.style.paddingBottom = Math.floor(records.length / 2) + 2 + \"px\";\r\n    }\r\n    function getFilterAndOptions() {\r\n        const dateOptions = document.querySelectorAll(\"input.\" + DATE_CHECKBOX_CLASSNAME);\r\n        const selectedDates = new Set();\r\n        dateOptions.forEach((op) => {\r\n            if (op.checked) {\r\n                selectedDates.add(op.value);\r\n            }\r\n        });\r\n        let showAllRecords = false;\r\n        const newRecordRadios = document.getElementsByName(NEW_RECORD_RADIO_NAME);\r\n        newRecordRadios.forEach((r) => {\r\n            if (r.checked) {\r\n                showAllRecords = r.value === \"allRecords\";\r\n            }\r\n        });\r\n        let olderFirst = true;\r\n        const sortByRadios = document.getElementsByName(SORT_BY_RADIO_NAME);\r\n        sortByRadios.forEach((r) => {\r\n            if (r.checked) {\r\n                olderFirst = r.value === \"olderFirst\";\r\n            }\r\n        });\r\n        return { dates: selectedDates, showAll: showAllRecords, olderFirst };\r\n    }\r\n    function filterRecords(allRecords, options) {\r\n        let records = [].concat(allRecords);\r\n        console.log(options);\r\n        if (options.dates) {\r\n            records = records.filter((r) => {\r\n                return options.dates.has(formatDate(r.date).split(\" \")[0]);\r\n            });\r\n        }\r\n        if (!options.showAll) {\r\n            const nameRecordMap = new Map();\r\n            records.forEach((r) => {\r\n                if (r.isNewRecord) {\r\n                    const mapKey = r.difficulty + \" \" + r.songName;\r\n                    nameRecordMap.delete(mapKey);\r\n                    nameRecordMap.set(mapKey, r);\r\n                }\r\n            });\r\n            records = [];\r\n            nameRecordMap.forEach((r) => {\r\n                records.push(r);\r\n            });\r\n        }\r\n        if (!options.olderFirst) {\r\n            records.reverse();\r\n        }\r\n        return records;\r\n    }\r\n    function createDateOptions(playDates, onChange) {\r\n        const div = ce(\"div\");\r\n        div.className = \"m_b_10 dateOptionsContainer\";\r\n        const heading = ce(\"div\");\r\n        heading.className = \"t_c m_5\";\r\n        heading.append(UIString.playDate);\r\n        div.append(heading);\r\n        playDates.forEach((d) => {\r\n            const label = ce(\"label\");\r\n            label.className = \"f_14 dateOptionLabel\";\r\n            const checkbox = ce(\"input\");\r\n            checkbox.type = \"checkbox\";\r\n            checkbox.className = DATE_CHECKBOX_CLASSNAME;\r\n            checkbox.value = d;\r\n            checkbox.checked = true;\r\n            checkbox.addEventListener(\"change\", onChange);\r\n            label.append(checkbox, d);\r\n            div.append(label);\r\n        });\r\n        return div;\r\n    }\r\n    function createNewRecordToggle(onChange) {\r\n        const div = ce(\"div\");\r\n        div.className = \"m_b_10 newRecordToggleContainer\";\r\n        const heading = ce(\"div\");\r\n        heading.className = \"t_c m_5\";\r\n        heading.append(UIString.newRecordToggleHeading);\r\n        div.append(heading);\r\n        [\"newRecordsOnly\", \"allRecords\"].forEach((op, idx) => {\r\n            const label = ce(\"label\");\r\n            label.className = \"f_14 newRecordLabel\";\r\n            const input = ce(\"input\");\r\n            input.type = \"radio\";\r\n            input.name = NEW_RECORD_RADIO_NAME;\r\n            input.className = NEW_RECORD_RADIO_NAME;\r\n            input.value = op;\r\n            input.checked = idx === 0;\r\n            input.addEventListener(\"change\", onChange);\r\n            label.append(input, UIString[op]);\r\n            div.append(label);\r\n        });\r\n        return div;\r\n    }\r\n    function createSortByRadio(onChange) {\r\n        const div = ce(\"div\");\r\n        div.className = \"m_b_10 sortByRadioContainer\";\r\n        const heading = ce(\"div\");\r\n        heading.className = \"t_c m_5\";\r\n        heading.append(UIString.sortBy);\r\n        div.append(heading);\r\n        [\"newerFirst\", \"olderFirst\"].forEach((op, idx) => {\r\n            const label = ce(\"label\");\r\n            label.className = \"f_14 sortByLabel\";\r\n            const input = ce(\"input\");\r\n            input.type = \"radio\";\r\n            input.name = SORT_BY_RADIO_NAME;\r\n            input.className = SORT_BY_RADIO_NAME;\r\n            input.value = op;\r\n            input.checked = idx === 0;\r\n            input.addEventListener(\"change\", onChange);\r\n            label.append(input, UIString[op]);\r\n            div.append(label);\r\n        });\r\n        return div;\r\n    }\r\n    function createCopyButton(onClick) {\r\n        const div = ce(\"div\");\r\n        div.className = \"copyBtnContainer\";\r\n        const copyTextBtn = ce(\"button\");\r\n        copyTextBtn.className = \"copyBtn\";\r\n        copyTextBtn.append(UIString.copy);\r\n        div.append(copyTextBtn);\r\n        let snackbarContainer = document.querySelector(\".snackbarContainer\");\r\n        let snackbar = document.querySelector(\".snackbar\");\r\n        if (!snackbarContainer) {\r\n            snackbarContainer = ce(\"div\");\r\n            snackbarContainer.className = \"snackbarContainer\";\r\n            snackbarContainer.style.display = \"none\";\r\n            document.body.append(snackbarContainer);\r\n        }\r\n        if (!snackbar) {\r\n            snackbar = ce(\"div\");\r\n            snackbar.className = \"wrapper snackbar\";\r\n            snackbar.innerText = UIString.copied;\r\n            snackbarContainer.append(snackbar);\r\n        }\r\n        copyTextBtn.addEventListener(\"click\", (evt) => {\r\n            onClick(evt);\r\n            document.execCommand(\"copy\");\r\n            snackbarContainer.style.display = \"block\";\r\n            snackbar.style.opacity = \"1\";\r\n            setTimeout(() => {\r\n                snackbar.style.opacity = \"0\";\r\n                setTimeout(() => {\r\n                    snackbarContainer.style.display = \"none\";\r\n                }, 500);\r\n            }, 4000);\r\n        });\r\n        const downloadBtn = ce(\"button\");\r\n        downloadBtn.className = \"downloadImgBtn\";\r\n        downloadBtn.append(UIString.downloadAsImage);\r\n        downloadBtn.addEventListener(\"click\", () => {\r\n            if (!domtoimage) {\r\n                console.warn(\"domtoimage not available\");\r\n                return;\r\n            }\r\n            const elem = document.querySelector(\".playRecordContainer\");\r\n            domtoimage.toPng(elem).then((dataUrl) => {\r\n                const dtStr = formatDate(new Date()).replace(\" \", \"_\").replace(\":\", \"-\");\r\n                const filename = \"record_\" + dtStr + \".png\";\r\n                const a = document.createElement(\"a\");\r\n                a.href = dataUrl;\r\n                a.download = filename;\r\n                //console.log(a);\r\n                a.click();\r\n                //a.innerText = filename;\r\n                //a.target = \"_blank\";\r\n                //a.style.fontSize = \"16px\";\r\n                //a.style.color = \"blue\";\r\n                //a.style.display = \"block\";\r\n                //document.querySelector(\".title.m_10\").insertAdjacentElement(\"beforebegin\", a);\r\n            });\r\n        });\r\n        div.append(downloadBtn);\r\n        return div;\r\n    }\r\n    function createOutputElement(allRecords, insertBefore) {\r\n        const playDates = allRecords.reduce((s, r) => {\r\n            s.add(formatDate(r.date).split(\" \")[0]);\r\n            return s;\r\n        }, new Set());\r\n        let dv = document.getElementById(\"recordSummary\");\r\n        if (dv) {\r\n            dv.innerHTML = \"\";\r\n        }\r\n        else {\r\n            dv = ce(\"div\");\r\n            dv.id = \"recordSummary\";\r\n        }\r\n        const playRecordContainer = ce(\"div\");\r\n        playRecordContainer.className = \"playRecordContainer\";\r\n        const table = ce(\"table\"), thead = ce(\"thead\"), tbody = ce(\"tbody\");\r\n        table.className = \"playRecordTable\";\r\n        table.append(thead, tbody);\r\n        playRecordContainer.append(table);\r\n        const handleOptionChange = () => {\r\n            renderTopScores(filterRecords(allRecords, getFilterAndOptions()), playRecordContainer, thead, tbody);\r\n        };\r\n        dv.append(createDateOptions(playDates, handleOptionChange));\r\n        dv.append(createNewRecordToggle(handleOptionChange));\r\n        dv.append(createSortByRadio(handleOptionChange));\r\n        const btn = createCopyButton(() => {\r\n            const selection = window.getSelection();\r\n            const range = document.createRange();\r\n            range.selectNodeContents(tbody);\r\n            selection.removeAllRanges();\r\n            selection.addRange(range);\r\n        });\r\n        dv.append(btn);\r\n        renderTopScores(filterRecords(allRecords, { olderFirst: false }), playRecordContainer, thead, tbody);\r\n        dv.append(playRecordContainer);\r\n        insertBefore.insertAdjacentElement(\"beforebegin\", dv);\r\n    }\r\n    const titleImg = document.querySelector(\".main_wrapper > img.title\");\r\n    if (titleImg) {\r\n        const cssId = \"recentPlayStyles\";\r\n        if (!document.getElementById(cssId)) {\r\n            const css = ce(\"link\");\r\n            css.id = cssId;\r\n            css.rel = \"stylesheet\";\r\n            css.href = \"https://myjian.github.io/mai-tools/scripts/recent-play-downloader.css\";\r\n            css.addEventListener(\"load\", () => {\r\n                collectRecentPlays().then((plays) => {\r\n                    createOutputElement(plays, titleImg);\r\n                }).catch((e) => {\r\n                    const footer = document.getElementsByTagName(\"footer\")[0];\r\n                    const textarea = document.createElement(\"textarea\");\r\n                    footer.append(textarea);\r\n                    textarea.value = e.message + \"\\n\" + e.stack;\r\n                });\r\n            });\r\n            document.head.append(css);\r\n        }\r\n        const d2iId = \"d2i\";\r\n        if (!document.getElementById(d2iId)) {\r\n            const d2i = document.createElement(\"script\");\r\n            d2i.id = d2iId;\r\n            d2i.type = \"text/javascript\";\r\n            d2i.src = \"https://cdnjs.cloudflare.com/ajax/libs/dom-to-image/2.6.0/dom-to-image.min.js\";\r\n            document.body.append(d2i);\r\n        }\r\n    }\r\n})();\r\n\n\n//# sourceURL=webpack:///./scripts/recent-play-downloader.ts?");

/***/ })

/******/ });